# Default values for nfs demo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nanzehua/nfs-server
  tag: 4.0
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

nfs:
  v3Enabled: false

  rpcPort: 111
  nfsPort: 2049
  statusPort: 32765
  outgoingPort: 32766
  mountdPort: 32767

  exports:
    # An NFSv4 client now has the ability to see all of the exports served by the NFSv4 server as a single file system,
    # called the NFSv4 pseudo-file system. On Red Hat Enterprise Linux, the pseudo-file system is identified as a single,
    # real file system, identified at export with the fsid=0 option.
    # eg: mount -t nfs4 Cluster_IP:/ /local/mount
    - /nfs         *(rw,fsid=0,async,no_subtree_check,no_auth_nlm,insecure,no_root_squash)

    # Using v4 the following would work:
    # eg: mount -t nfs4 Cluster_IP:/another /local/mount
    # - /nfs/another *(rw,async,no_subtree_check,no_auth_nlm,insecure,no_root_squash)

  volumeName: nfs
  volumePath: /nfs

service:
  type: ClusterIP

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
